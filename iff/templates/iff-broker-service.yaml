{{- if .Values.opcua.configuration.enabled }}
apiVersion: {{ printf "%s/%s" .Values.crds.group .Values.crds.version }}
kind: Configuration
metadata:
  name: {{ .Values.opcua.configuration.name }}
spec:
  discoveryHandler:
    name: opcua
    discoveryDetails: |+
      opcuaDiscoveryMethod: 
        standard:
          discoveryUrls: 
          {{- toYaml .Values.opcua.configuration.discoveryDetails.discoveryUrls | nindent 10 }}
      applicationNames:
        action: {{ .Values.opcua.configuration.discoveryDetails.applicationNames.action }}
        {{- if .Values.opcua.configuration.discoveryDetails.applicationNames.items}}
        items:
        {{- toYaml .Values.opcua.configuration.discoveryDetails.applicationNames.items | nindent 8 }}
        {{- else }}
        items: []
        {{- end }}

  {{- if .Values.opcua.configuration.pod.enabled }}      
  brokerSpec:
    {{- if .Values.opcua.configuration.pod.enabled }}
    brokerPodSpec:
      restartPolicy: {{ .Values.opcua.configuration.pod.restartPolicy }}
      containers:
      - name: {{ .Values.opcua.configuration.brokerPod1.name }}
        {{- if .Values.opcua.configuration.brokerPod1.env }}
        env:
        {{- range $key, $val := .Values.opcua.configuration.brokerPod1.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
        {{- end }}
        {{- end }}
        {{- with .Values.opcua.configuration.brokerPod1.envFrom }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: {{ printf "%s:%s" .Values.opcua.configuration.brokerPod1.image.repository .Values.opcua.configuration.brokerPod1.image.tag | quote }}
        imagePullPolicy: {{ .Values.opcua.configuration.brokerPod1.image.pullPolicy }}
        resources:
          requests:
            {{`"{{PLACEHOLDER}}"`}} : "1"
          limits:
            {{`"{{PLACEHOLDER}}"`}} : "1"
        {{- if .Values.opcua.configuration.brokerPod1.volumeMounts }}
        volumeMounts:
        {{- with .Values.opcua.configuration.brokerPod1.volumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}

      - name: {{ .Values.opcua.configuration.brokerPod2.name }}
        {{- if .Values.opcua.configuration.brokerPod2.env }}
        env:
          {{- range $key, $val := .Values.opcua.configuration.brokerPod2.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end }}
        {{- end }}
        {{- with .Values.opcua.configuration.brokerPod2.envFrom }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        {{- with .Values.opcua.configuration.brokerPod2.volumeMounts}}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        securityContext:
          privileged: {{ .Values.opcua.configuration.brokerPod2.securityContext.privileged }}
          capabilities:
            drop: {{ .Values.opcua.configuration.brokerPod2.securityContext.capabilities.drop }}
        image: {{ printf "%s:%s" .Values.opcua.configuration.brokerPod2.image.repository .Values.opcua.configuration.brokerPod2.image.tag | quote }}
        imagePullPolicy: {{ .Values.opcua.configuration.brokerPod2.image.pullPolicy }}
        ports:
        {{- with .Values.opcua.configuration.brokerPod2.ports}}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      {{- with .Values.opcua.configuration.pod.volumes}}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
      {{- with .Values.opcua.configuration.pod.imagePullSecrets }}
        {{- toYaml . | nindent 6 }}
      {{- end }}

  capacity: {{ .Values.opcua.configuration.capacity }}
{{- end }}
{{- end }}
{{- end }}

---

# Update this configmap with the correct OPC-UA server details
apiVersion: v1
data:
  config.json: |
    {
       "fusionopcuadataservice": {
           "specification": [
              {
                  "node_id": "<some namespace>",
                  "identifier": "<some identifier>",
                  "parameter": "<some PDT property>"
              },
              {
                  "node_id": "<some namespace>",
                  "identifier": "<some identifier>",
                  "parameter": "<some PDT property>"
              }
           ]
       }
     }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: <Name of the configmap for OPC-UA machine config>

---

apiVersion: v1
data:
  config.json: |
    {
                "data_directory": "./data",
                "listeners": {
                        "rest_port": 8000,
                        "udp_port": 41234,
                        "tcp_port": 7070
                },
                "receivers": {
                        "udp_port": 41235,
                        "udp_address": "127.0.0.1"
                },
                "logger": {
                        "level": "info",
                        "path": "/tmp/",
                        "max_size": 134217728
                },
                "connector": {
                        "rest": {
                                "host": "<PDT URL>",
                                "port": <443 here for HTTPS, 80 for HTTP>,
                                "protocol": "<HTTP or HTTPS>",
                                "strictSSL": false,
                                "timeout": 30000,
                                "proxy": {
                                        "host": false,
                                        "port": false
                                }
                        },
                        "mqtt": {
                                "host": "<PDT URL>",
                                "port": 8883,
                                "websockets": false,
                                "qos": 1,
                                "retain": false,
                                "secure": true,
                                "retries": 5,
                                "strictSSL": false,
                                "sparkplugB": true,
                                "version": "spBv1.0"        
                        }
                }
        }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: <Name of the configmap that contains OISP device config>

---

apiVersion: v1
stringData:
  activation-code: "null" ## This will be automatically updated by OISP token operator
kind: Secret
metadata:
  creationTimestamp: null
  name: <Name of the secret for OISP activation code>
  namespace: oisp-devices

---